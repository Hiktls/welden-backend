name: Welden test
on: push

permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest


    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest redis
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Create config
        run: | 
          echo "SECRET_KEY: \"${{secrets.SECRET_KEY}}\"" > secrets.yaml
          echo "ALGO: \"HS256\"" >> secrets.yaml
          echo "ACCESS_TOKEN_EXPIRE_MIN: 30" >> secrets.yaml
          echo "NONCE_EXPIRE_MIN: 5" >> secrets.yaml
          echo "RESTRICTED_PATHS: ["/api/v1/user/users"]" >> secrets.yaml
          echo "SYSTEM_ADDRESS: \"0xEd69082Da1b2Fb24eE007E635BC9D3E131EF8479\"" >> secrets.yaml
          echo "ADMINS: []" >> secrets.yaml
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
